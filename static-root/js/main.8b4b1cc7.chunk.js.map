{"version":3,"sources":["logo.svg","tweets/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["TweetComponent","props","textAreaRef","React","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newValue","current","value","tempNewTweets","unshift","content","likes","id","ref","required","name","type","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","send","loadTweets","alert","map","item","index","Tweet","tweet","ActionBtn","action","setLikes","userLike","setuserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","document","getElementById","ReactDOM","render","StrictMode","tweetsEl"],"mappings":"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","file":"static/js/main.8b4b1cc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState}  from 'react'\nimport {loadTweets} from '../lookup'\n\n\nexport function TweetComponent(props){\n\tconst textAreaRef = React.createRef()\n\tconst [newTweets, setNewTweets] = useState([])\n\tconst handleSubmit = (event) => {\n\t\t event.preventDefault()\n\t\t const newValue = textAreaRef.current.value\n\t\t let tempNewTweets = [...newTweets] //... cpoy the new tweet\n\t\t tempNewTweets.unshift({\n\t\t \tcontent : newValue,\n\t\t \tlikes:0,\n\t\t \tid: 12322\n\t\t })\n\t\t setNewTweets(tempNewTweets)\n\t\t textAreaRef.current.value = ''\n\t}\n\n\treturn <div className={props.className}>\n\t<div className='col-12 mb-3'>\n\t\t<form onSubmit={handleSubmit}>\n\t\t<textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\t\t</textarea>\n\t\t<button type='submit' className='btn btn-primary my-3'>Tweet</button>\n\t\t</form>\n\t</div>\n\t<TweetsList newTweets={newTweets} />\n\t</div>\n\n}\n\nexport function TweetsList(props){\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    useEffect(() => {\n    \tconst final = [...props.newTweets].concat(tweetsInit) \n    \tif(final.length !== tweets.length){\n    \t\tsetTweets(final)\n    \t}\n\n    }, [props.newTweets,tweets, tweetsInit])\n\n\tuseEffect(() => {\n\t    const myCallback = (response, status) => {\n\t      if(status === 200){\n\t        setTweetsInit(response)\n\t      }else{\n\t        alert(\"There was an error\")\n\t      }\n\t    }\n\t    loadTweets(myCallback)\n\n\t}, [])\n  \treturn tweets.map((item, index) =>{\n          return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\n        })\n}\n\nexport function ActionBtn(props){\n  const {tweet, action} = props\n  const [likes, setLikes]  = useState(tweet.likes ? tweet.likes : 0)\n  const [userLike, setuserLike] = useState(tweet.userLike === true ? true : false)\n  const actionDisplay = action.display ? action.display : 'Action'\n  \n  const handleClick = (event) => {\n  \tevent.preventDefault()\n  \tif (action.type === 'like'){\n  \t\tif(userLike === true){\n  \t\t\tsetLikes(likes - 1)\n  \t\t\tsetuserLike(false)\n  \t\t} else {\n  \t\t\tsetLikes(likes + 1)\n  \t\t\tsetuserLike(true)\n  \t\t}\n  \t\t\n  \t}\n\n  }\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n  const className = props.className ? props.className : 'btn btn-primary btn-sm'\n\n  return <button className={className} onClick={handleClick}>{display}</button>\n}\n\nexport function Tweet(props){\n  const {tweet} = props\n  const className = props.className ? props.className : 'col-10 max-auto col-md-6'\n\n  return <div className={className}>\n    <p>{tweet.id} - {tweet.content}</p>\n    <div className='btn btn-group'>\n      <ActionBtn tweet={tweet} action={{type:'like', display:'Likes'}} />\n      <ActionBtn tweet={tweet} action={{type:'unlike', display:'Unlike'}} />\n      <ActionBtn tweet={tweet} action={{type:'retweet', display:'Retweet'}} />\n    </div>\n  </div>\n}\n\n\n\n","\n\nexport function loadTweets(callback){\n  const xhr = new XMLHttpRequest()\n  const method = 'GET'\n  const url = 'http://localhost:8000/api/tweets/'\n  const responseType = 'json'\n\n  xhr.responseType = responseType\n  xhr.open(method, url)\n  xhr.onload = function(){\n    callback(xhr.response ,xhr.status)\n  }\n  xhr.onerror = function(e){\n    callback({'message': 'The request was an error'}, 400)\n  }\n  xhr.send()\n}","\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetComponent} from './tweets'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n         <p>\n        <TweetComponent />\n          \n        </p>\n\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n       \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n\tReactDOM.render(\n\t  <React.StrictMode>\n\t    <App />\n\t  </React.StrictMode>, appEl);\t\n}\n\nconst tweetsEl = document.getElementById('tweetme-2')\nif(tweetsEl){\n\tReactDOM.render(<TweetComponent />, tweetsEl)\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}